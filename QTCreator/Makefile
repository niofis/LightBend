#############################################################################
# Makefile for building: lightbend
# Generated by qmake (2.01a) (Qt 4.8.1) on: Tue Apr 17 17:56:31 2012
# Project:  lightbend.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile lightbend.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -pipe -g -Wall -O3 -ffunction-sections -DLINUX -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -Iusr/include
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu -Wl,-O1
LIBS          = $(SUBLIBS)   -L/usr/lib -lSDL -lSDL_gfx -llua -lm -lpng -z muldefs -pthread --openmp 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ../src/utils.c \
		../src/renderer.c \
		../src/MS3DFile.c \
		../src/memory.c \
		../src/main.c \
		../src/luabindings.c \
		../src/list.c \
		../src/image.c \
		../src/demos.c \
		../src/bvh.c 
OBJECTS       = utils.o \
		renderer.o \
		MS3DFile.o \
		memory.o \
		main.o \
		luabindings.o \
		list.o \
		image.o \
		demos.o \
		bvh.o
DIST          = /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		lightbend.pro
QMAKE_TARGET  = lightbend
DESTDIR       = 
TARGET        = lightbend

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: lightbend.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/common/gcc-base.conf \
		/usr/share/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt/mkspecs/common/g++-base.conf \
		/usr/share/qt/mkspecs/common/g++-unix.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile lightbend.pro
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/common/gcc-base.conf:
/usr/share/qt/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt/mkspecs/common/g++-base.conf:
/usr/share/qt/mkspecs/common/g++-unix.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++ -o Makefile lightbend.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/lightbend1.0.0 || $(MKDIR) .tmp/lightbend1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/lightbend1.0.0/ && (cd `dirname .tmp/lightbend1.0.0` && $(TAR) lightbend1.0.0.tar lightbend1.0.0 && $(COMPRESS) lightbend1.0.0.tar) && $(MOVE) `dirname .tmp/lightbend1.0.0`/lightbend1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/lightbend1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

utils.o: ../src/utils.c ../src/utils.h \
		../src/renderer.h \
		../src/globals.h \
		../src/memory.h \
		../src/list.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o utils.o ../src/utils.c

renderer.o: ../src/renderer.c ../src/renderer.h \
		../src/globals.h \
		../src/memory.h \
		../src/list.h \
		../src/bvh.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o renderer.o ../src/renderer.c

MS3DFile.o: ../src/MS3DFile.c ../src/MS3DFile.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o MS3DFile.o ../src/MS3DFile.c

memory.o: ../src/memory.c ../src/memory.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o memory.o ../src/memory.c

main.o: ../src/main.c ../src/image.h \
		../src/globals.h \
		../src/memory.h \
		../src/renderer.h \
		../src/list.h \
		../src/demos.h \
		../src/utils.h \
		../src/bvh.h \
		../src/luabindings.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o main.o ../src/main.c

luabindings.o: ../src/luabindings.c ../src/globals.h \
		../src/memory.h \
		../src/renderer.h \
		../src/list.h \
		../src/bvh.h \
		../src/demos.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o luabindings.o ../src/luabindings.c

list.o: ../src/list.c ../src/list.h \
		../src/globals.h \
		../src/memory.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o list.o ../src/list.c

image.o: ../src/image.c ../src/image.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o image.o ../src/image.c

demos.o: ../src/demos.c ../src/demos.h \
		../src/renderer.h \
		../src/globals.h \
		../src/memory.h \
		../src/list.h \
		../src/MS3DFile.h \
		../src/bvh.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o demos.o ../src/demos.c

bvh.o: ../src/bvh.c ../src/globals.h \
		../src/memory.h \
		../src/renderer.h \
		../src/list.h \
		../src/bvh.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o bvh.o ../src/bvh.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

